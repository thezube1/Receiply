{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zubin\\\\Receiply\\\\frontend\\\\src\\\\components\\\\upload\\\\uploadManual\\\\uploadManual.jsx\";\nimport React, { Component } from \"react\";\nimport \"./uploadManual.css\";\nimport NavbarMain from \"../../navbar/navbarmain\";\nimport axios from \"axios\";\nimport { ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\n\nclass uploadManual extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      TTM: \"\",\n      description: \"\",\n      ingredientCount: [\"\"],\n      prepCount: [\"\"],\n      cookingCount: [\"\"],\n      tags: [\"\"],\n      sharing: undefined\n    };\n\n    this.handleSubmit = () => {\n      const data = {\n        name: this.state.name,\n        TTM: this.state.TTM,\n        description: this.state.description,\n        ingredients: this.state.ingredientCount,\n        prep: this.state.prepCount,\n        steps: this.state.cookingCount,\n        tags: this.state.tags\n      };\n\n      if (this.state.sharing === undefined) {\n        console.log(\"Please select a sharing option\");\n      }\n\n      axios.post(\"/api/createrecipe\", data);\n    };\n\n    this.handleChange2 = event => {\n      this.setState({\n        sharing: event\n      });\n    };\n\n    this.handleRemove = (name, type, index) => {\n      const array = type;\n      array.splice(index, 1);\n      this.setState({\n        [name]: array\n      });\n    };\n\n    this.handleAdd = (name, type) => {\n      type.push(\"\");\n      this.setState({\n        [name]: type\n      });\n    };\n\n    this.handleArrayChange = (inputType, type, index) => event => {\n      let newItem = event.target.value;\n      const newArray = this.state[inputType];\n      newArray[index] = newItem;\n      this.setState({\n        [inputType]: newArray\n      });\n    };\n\n    this.handleChange = inputType => event => {\n      this.setState({\n        [inputType]: event.target.value\n      });\n    };\n\n    this.includeAdd = (name, type, index) => {\n      if (type.length === index + 1) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"uploadManualAdd\",\n          onClick: () => this.handleAdd(name, type),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"uploadManualAddInner1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"uploadManualAddInner2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n\n    this.includeDelete = (name, type, index) => {\n      if (type.length !== 1) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"uploadManualRemove\",\n          onClick: () => {\n            this.handleRemove(name, type, index);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"uploadManualRemoveInner\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        }));\n      } else if (index !== 0) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"uploadManualRemove\",\n          onClick: () => {\n            this.handleRemove(name, type, index);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"uploadManualRemoveInner\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.backgroundColor = \"rgb(136, 228, 138)\";\n  }\n\n  componentWillUnmount() {\n    document.body.style.backgroundColor = \"white\";\n  }\n\n  render() {\n    console.log(this.state.sharing);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavbarMain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualTitleWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"Upload Recipe\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"Items with * are required fields\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Upload Photo:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"uploadManualButton\",\n      type: \"button\",\n      value: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Time to make\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"uploadManualTTM\",\n      onChange: this.handleChange(\"TTM\"),\n      className: \"uploadManualInput\",\n      placeholder: \"Enter estimated time to make\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"Name of Recipe:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: this.handleChange(\"name\"),\n      className: \"uploadManualInput\",\n      placeholder: \"Enter name of Recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \"Description:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: this.handleChange(\"description\"),\n      className: \"uploadManualInput\",\n      id: \"uploadManualInputDescription\",\n      placeholder: \"Enter description of Recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"Ingredients:\")), this.state.ingredientCount.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"uploadManualInputWrapper2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"uploadManualInput\",\n        id: \"uploadManualInputIngredient\",\n        placeholder: \"Enter ingredient\",\n        value: item,\n        onChange: this.handleArrayChange(\"ingredientCount\", this.state.ingredientCount, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }), this.includeDelete(\"ingredientCount\", this.state.ingredientCount, index), this.includeAdd(\"ingredientCount\", this.state.ingredientCount, index));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \"Prep instructions:\")), this.state.prepCount.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"uploadManualInputWrapper2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"uploadManualInput\",\n        id: \"uploadManualInputIngredient\",\n        placeholder: \"Enter step\",\n        value: item,\n        onChange: this.handleArrayChange(\"prepCount\", this.state.prepCount, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }), this.includeDelete(\"prepCount\", this.state.prepCount, index), this.includeAdd(\"prepCount\", this.state.prepCount, index));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, \"Cooking instructions:\")), this.state.cookingCount.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"uploadManualInputWrapper2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"uploadManualInput\",\n        id: \"uploadManualInputIngredient\",\n        placeholder: \"Enter step\",\n        value: item,\n        onChange: this.handleArrayChange(\"cookingCount\", this.state.cookingCount, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }), this.includeDelete(\"cookingCount\", this.state.cookingCount, index), this.includeAdd(\"cookingCount\", this.state.cookingCount, index));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, \"Tags:\")), this.state.tags.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"uploadManualInputWrapper2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"uploadManualInput\",\n        id: \"uploadManualInputTags\",\n        placeholder: \"Enter step\",\n        value: item,\n        onChange: this.handleArrayChange(\"tags\", this.state.tags, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      }), this.includeDelete(\"tags\", this.state.tags, index), this.includeAdd(\"tags\", this.state.tags, index));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, \"Who can view your recipe:\")), /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      name: \"selectShare\",\n      type: \"radio\",\n      onChange: this.handleChange2,\n      id: \"uploadManualShare\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: \"success\",\n      className: \"uploadManualShareButton\",\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, \"Private\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: \"success\",\n      className: \"uploadManualShareButton\",\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, \"Family\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: \"success\",\n      className: \"uploadManualShareButton\",\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, \"Public\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"uploadManualSave\",\n      className: \"uploadManualButton\",\n      type: \"button\",\n      value: \"Save recipe\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default uploadManual;","map":{"version":3,"sources":["C:/Users/zubin/Receiply/frontend/src/components/upload/uploadManual/uploadManual.jsx"],"names":["React","Component","NavbarMain","axios","ToggleButtonGroup","ToggleButton","uploadManual","state","name","TTM","description","ingredientCount","prepCount","cookingCount","tags","sharing","undefined","handleSubmit","data","ingredients","prep","steps","console","log","post","handleChange2","event","setState","handleRemove","type","index","array","splice","handleAdd","push","handleArrayChange","inputType","newItem","target","value","newArray","handleChange","includeAdd","length","includeDelete","componentDidMount","document","body","style","backgroundColor","componentWillUnmount","render","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./uploadManual.css\";\r\nimport NavbarMain from \"../../navbar/navbarmain\";\r\nimport axios from \"axios\";\r\nimport { ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\r\n\r\nclass uploadManual extends Component {\r\n  state = {\r\n    name: \"\",\r\n    TTM: \"\",\r\n    description: \"\",\r\n    ingredientCount: [\"\"],\r\n    prepCount: [\"\"],\r\n    cookingCount: [\"\"],\r\n    tags: [\"\"],\r\n    sharing: undefined,\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const data = {\r\n      name: this.state.name,\r\n      TTM: this.state.TTM,\r\n      description: this.state.description,\r\n      ingredients: this.state.ingredientCount,\r\n      prep: this.state.prepCount,\r\n      steps: this.state.cookingCount,\r\n      tags: this.state.tags,\r\n    };\r\n    if (this.state.sharing === undefined) {\r\n      console.log(\"Please select a sharing option\");\r\n    }\r\n    axios.post(\"/api/createrecipe\", data);\r\n  };\r\n\r\n  handleChange2 = (event) => {\r\n    this.setState({ sharing: event });\r\n  };\r\n\r\n  handleRemove = (name, type, index) => {\r\n    const array = type;\r\n    array.splice(index, 1);\r\n    this.setState({ [name]: array });\r\n  };\r\n\r\n  handleAdd = (name, type) => {\r\n    type.push(\"\");\r\n    this.setState({ [name]: type });\r\n  };\r\n\r\n  handleArrayChange = (inputType, type, index) => (event) => {\r\n    let newItem = event.target.value;\r\n    const newArray = this.state[inputType];\r\n    newArray[index] = newItem;\r\n    this.setState({\r\n      [inputType]: newArray,\r\n    });\r\n  };\r\n\r\n  handleChange = (inputType) => (event) => {\r\n    this.setState({ [inputType]: event.target.value });\r\n  };\r\n\r\n  includeAdd = (name, type, index) => {\r\n    if (type.length === index + 1) {\r\n      return (\r\n        <button\r\n          className=\"uploadManualAdd\"\r\n          onClick={() => this.handleAdd(name, type)}\r\n        >\r\n          <div className=\"uploadManualAddInner1\"></div>\r\n          <div className=\"uploadManualAddInner2\"></div>\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  includeDelete = (name, type, index) => {\r\n    if (type.length !== 1) {\r\n      return (\r\n        <button\r\n          className=\"uploadManualRemove\"\r\n          onClick={() => {\r\n            this.handleRemove(name, type, index);\r\n          }}\r\n        >\r\n          <div className=\"uploadManualRemoveInner\"></div>\r\n        </button>\r\n      );\r\n    } else if (index !== 0) {\r\n      return (\r\n        <button\r\n          className=\"uploadManualRemove\"\r\n          onClick={() => {\r\n            this.handleRemove(name, type, index);\r\n          }}\r\n        >\r\n          <div className=\"uploadManualRemoveInner\"></div>\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = \"rgb(136, 228, 138)\";\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.style.backgroundColor = \"white\";\r\n  }\r\n  render() {\r\n    console.log(this.state.sharing);\r\n    return (\r\n      <React.Fragment>\r\n        <NavbarMain />\r\n        <div id=\"uploadManualWrapper\">\r\n          <div id=\"uploadManualContent\">\r\n            <div id=\"uploadManualTitleWrapper\">\r\n              <div id=\"uploadManualTitle\">Upload Recipe</div>\r\n              <div className=\"uploadManualRequired\">\r\n                Items with * are required fields\r\n              </div>\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>Upload Photo:</div>\r\n              <input\r\n                className=\"uploadManualButton\"\r\n                type=\"button\"\r\n                value=\"select\"\r\n              />\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span className=\"uploadManualRequired\">*</span>\r\n                <span>Time to make</span>\r\n              </div>\r\n              <textarea\r\n                id=\"uploadManualTTM\"\r\n                onChange={this.handleChange(\"TTM\")}\r\n                className=\"uploadManualInput\"\r\n                placeholder=\"Enter estimated time to make\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span className=\"uploadManualRequired\">*</span>\r\n                <span>Name of Recipe:</span>\r\n              </div>\r\n              <textarea\r\n                onChange={this.handleChange(\"name\")}\r\n                className=\"uploadManualInput\"\r\n                placeholder=\"Enter name of Recipe\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span className=\"uploadManualRequired\">*</span>\r\n                <span>Description:</span>\r\n              </div>\r\n              <textarea\r\n                onChange={this.handleChange(\"description\")}\r\n                className=\"uploadManualInput\"\r\n                id=\"uploadManualInputDescription\"\r\n                placeholder=\"Enter description of Recipe\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            {/* Ingredients form*/}\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span>Ingredients:</span>\r\n              </div>\r\n              {this.state.ingredientCount.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"uploadManualInputWrapper2\">\r\n                    <textarea\r\n                      className=\"uploadManualInput\"\r\n                      id=\"uploadManualInputIngredient\"\r\n                      placeholder=\"Enter ingredient\"\r\n                      value={item}\r\n                      onChange={this.handleArrayChange(\r\n                        \"ingredientCount\",\r\n                        this.state.ingredientCount,\r\n                        index\r\n                      )}\r\n                    ></textarea>\r\n                    {this.includeDelete(\r\n                      \"ingredientCount\",\r\n                      this.state.ingredientCount,\r\n                      index\r\n                    )}\r\n                    {this.includeAdd(\r\n                      \"ingredientCount\",\r\n                      this.state.ingredientCount,\r\n                      index\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Prep instructions form*/}\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span>Prep instructions:</span>\r\n              </div>\r\n              {this.state.prepCount.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"uploadManualInputWrapper2\">\r\n                    <textarea\r\n                      className=\"uploadManualInput\"\r\n                      id=\"uploadManualInputIngredient\"\r\n                      placeholder=\"Enter step\"\r\n                      value={item}\r\n                      onChange={this.handleArrayChange(\r\n                        \"prepCount\",\r\n                        this.state.prepCount,\r\n                        index\r\n                      )}\r\n                    ></textarea>\r\n                    {this.includeDelete(\r\n                      \"prepCount\",\r\n                      this.state.prepCount,\r\n                      index\r\n                    )}\r\n                    {this.includeAdd(\"prepCount\", this.state.prepCount, index)}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Cooking instructions form*/}\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span className=\"uploadManualRequired\">*</span>\r\n                <span>Cooking instructions:</span>\r\n              </div>\r\n              {this.state.cookingCount.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"uploadManualInputWrapper2\">\r\n                    <textarea\r\n                      className=\"uploadManualInput\"\r\n                      id=\"uploadManualInputIngredient\"\r\n                      placeholder=\"Enter step\"\r\n                      value={item}\r\n                      onChange={this.handleArrayChange(\r\n                        \"cookingCount\",\r\n                        this.state.cookingCount,\r\n                        index\r\n                      )}\r\n                    ></textarea>\r\n                    {this.includeDelete(\r\n                      \"cookingCount\",\r\n                      this.state.cookingCount,\r\n                      index\r\n                    )}\r\n                    {this.includeAdd(\r\n                      \"cookingCount\",\r\n                      this.state.cookingCount,\r\n                      index\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Tags */}\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span>Tags:</span>\r\n              </div>\r\n              {this.state.tags.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"uploadManualInputWrapper2\">\r\n                    <textarea\r\n                      className=\"uploadManualInput\"\r\n                      id=\"uploadManualInputTags\"\r\n                      placeholder=\"Enter step\"\r\n                      value={item}\r\n                      onChange={this.handleArrayChange(\r\n                        \"tags\",\r\n                        this.state.tags,\r\n                        index\r\n                      )}\r\n                    ></textarea>\r\n                    {this.includeDelete(\"tags\", this.state.tags, index)}\r\n                    {this.includeAdd(\"tags\", this.state.tags, index)}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span className=\"uploadManualRequired\">*</span>\r\n                <span>Who can view your recipe:</span>\r\n              </div>\r\n              <ToggleButtonGroup\r\n                name=\"selectShare\"\r\n                type=\"radio\"\r\n                onChange={this.handleChange2}\r\n                id=\"uploadManualShare\"\r\n              >\r\n                <ToggleButton\r\n                  variant=\"success\"\r\n                  className=\"uploadManualShareButton\"\r\n                  value={1}\r\n                >\r\n                  Private\r\n                </ToggleButton>\r\n                <ToggleButton\r\n                  variant=\"success\"\r\n                  className=\"uploadManualShareButton\"\r\n                  value={2}\r\n                >\r\n                  Family\r\n                </ToggleButton>\r\n                <ToggleButton\r\n                  variant=\"success\"\r\n                  className=\"uploadManualShareButton\"\r\n                  value={3}\r\n                >\r\n                  Public\r\n                </ToggleButton>\r\n              </ToggleButtonGroup>\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <input\r\n                id=\"uploadManualSave\"\r\n                className=\"uploadManualButton\"\r\n                type=\"button\"\r\n                value=\"Save recipe\"\r\n                onClick={this.handleSubmit}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default uploadManual;\r\n"]},"metadata":{},"sourceType":"module"}