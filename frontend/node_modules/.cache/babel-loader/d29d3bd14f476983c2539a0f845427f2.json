{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zubin\\\\Receiply\\\\frontend\\\\src\\\\privateroute2.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst getAuth = () => {};\n\naxios.get(\"/api/authorize\").then(result => {\n  const PrivateRoute2 = ({\n    component: Component,\n    authed,\n    ...rest\n  }) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => result ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 18\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n});\nexport default PrivateRoute2;","map":{"version":3,"sources":["C:/Users/zubin/Receiply/frontend/src/privateroute2.jsx"],"names":["React","Route","Redirect","axios","getAuth","get","then","result","PrivateRoute2","component","Component","authed","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM,CAAE,CAAxB;;AAEAD,KAAK,CAACE,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkCC,MAAD,IAAY;AAC3C,QAAMC,aAAa,GAAG,CAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,MAAxB;AAAgC,OAAGC;AAAnC,GAAD,kBACpB,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACNN,MAAM,gBAAG,oBAAC,SAAD,oBAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,gBAA8B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CATD;AAUA,eAAeL,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst getAuth = () => {};\r\n\r\naxios.get(\"/api/authorize\").then((result) => {\r\n  const PrivateRoute2 = ({ component: Component, authed, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        result ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n});\r\nexport default PrivateRoute2;\r\n"]},"metadata":{},"sourceType":"module"}