{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zubin\\\\Receiply\\\\frontend\\\\src\\\\components\\\\upload\\\\uploadManual\\\\uploadManual.jsx\";\nimport React, { Component } from \"react\";\nimport \"./uploadManual.css\";\nimport NavbarMain from \"../../navbar/navbarmain\";\nimport uploadManualStep from \"./uploadManualStep\";\nimport UploadManualStep from \"./uploadManualStep\";\n\nclass uploadManual extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredientCount: [\"\"],\n      prepCount: [\"\"]\n    };\n\n    this.handleRemove = (name, type, index) => {\n      const array = type;\n      array.splice(index, 1);\n      this.setState({\n        [name]: array\n      });\n    };\n\n    this.handleAdd = (name, type) => {\n      type.push(\"\");\n      this.setState({\n        [name]: type\n      });\n    };\n\n    this.handleAutoAdd = (inputType, type) => event => {\n      if (event.target.value === \"\") {\n        type.push(\"\");\n        this.setState({\n          [inputType]: type\n        }); //event.preventDefault && event.preventDefault();\n        //event.stopPropagation && event.stopPropagation();\n      }\n    };\n\n    this.handleArrayChange = (inputType, type, index) => event => {\n      let newItem = event.target.value;\n      const newArray = this.state[inputType];\n      newArray[index] = newItem;\n      this.setState({\n        [inputType]: newArray\n      });\n    };\n\n    this.includeAdd = (name, type, index) => {\n      if (type.length === index + 1) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"uploadManualAdd\",\n          onClick: () => this.handleAdd(name, type),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"uploadManualAddInner1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"uploadManualAddInner2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.backgroundColor = \"rgb(136, 228, 138)\";\n  }\n\n  componentWillUnmount() {\n    document.body.style.backgroundColor = \"white\";\n  }\n\n  render() {\n    console.log(this.state.ingredientCount);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavbarMain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Upload Recipe\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Upload Photo:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"uploadManualButton\",\n      type: \"button\",\n      value: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Name of Recipe:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"uploadManualInput\",\n      placeholder: \"Enter name of Recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Description:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"uploadManualInput\",\n      id: \"uploadManualInputDescription\",\n      placeholder: \"Enter description of Recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(UploadManualStep, {\n      item: this.state.ingredientCount,\n      handleAdd: this.handleAdd(\"ingredientCount\"),\n      handleRemove: this.handleRemove(\"ingredientCount\", this.state.ingredientCount),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default uploadManual;","map":{"version":3,"sources":["C:/Users/zubin/Receiply/frontend/src/components/upload/uploadManual/uploadManual.jsx"],"names":["React","Component","NavbarMain","uploadManualStep","UploadManualStep","uploadManual","state","ingredientCount","prepCount","handleRemove","name","type","index","array","splice","setState","handleAdd","push","handleAutoAdd","inputType","event","target","value","handleArrayChange","newItem","newArray","includeAdd","length","componentDidMount","document","body","style","backgroundColor","componentWillUnmount","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./uploadManual.css\";\r\nimport NavbarMain from \"../../navbar/navbarmain\";\r\nimport uploadManualStep from \"./uploadManualStep\";\r\nimport UploadManualStep from \"./uploadManualStep\";\r\n\r\nclass uploadManual extends Component {\r\n  state = {\r\n    ingredientCount: [\"\"],\r\n    prepCount: [\"\"],\r\n  };\r\n\r\n  handleRemove = (name, type, index) => {\r\n    const array = type;\r\n    array.splice(index, 1);\r\n    this.setState({ [name]: array });\r\n  };\r\n\r\n  handleAdd = (name, type) => {\r\n    type.push(\"\");\r\n    this.setState({ [name]: type });\r\n  };\r\n\r\n  handleAutoAdd = (inputType, type) => (event) => {\r\n    if (event.target.value === \"\") {\r\n      type.push(\"\");\r\n      this.setState({ [inputType]: type });\r\n      //event.preventDefault && event.preventDefault();\r\n      //event.stopPropagation && event.stopPropagation();\r\n    }\r\n  };\r\n\r\n  handleArrayChange = (inputType, type, index) => (event) => {\r\n    let newItem = event.target.value;\r\n    const newArray = this.state[inputType];\r\n    newArray[index] = newItem;\r\n    this.setState({\r\n      [inputType]: newArray,\r\n    });\r\n  };\r\n\r\n  includeAdd = (name, type, index) => {\r\n    if (type.length === index + 1) {\r\n      return (\r\n        <button\r\n          className=\"uploadManualAdd\"\r\n          onClick={() => this.handleAdd(name, type)}\r\n        >\r\n          <div className=\"uploadManualAddInner1\"></div>\r\n          <div className=\"uploadManualAddInner2\"></div>\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = \"rgb(136, 228, 138)\";\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.style.backgroundColor = \"white\";\r\n  }\r\n  render() {\r\n    console.log(this.state.ingredientCount);\r\n    return (\r\n      <React.Fragment>\r\n        <NavbarMain />\r\n        <div id=\"uploadManualWrapper\">\r\n          <div id=\"uploadManualContent\">\r\n            <div id=\"uploadManualTitle\">Upload Recipe</div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>Upload Photo:</div>\r\n              <input\r\n                className=\"uploadManualButton\"\r\n                type=\"button\"\r\n                value=\"select\"\r\n              />\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span className=\"uploadManualRequired\">*</span>\r\n                <span>Name of Recipe:</span>\r\n              </div>\r\n              <textarea\r\n                className=\"uploadManualInput\"\r\n                placeholder=\"Enter name of Recipe\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span className=\"uploadManualRequired\">*</span>\r\n                <span>Description:</span>\r\n              </div>\r\n              <textarea\r\n                className=\"uploadManualInput\"\r\n                id=\"uploadManualInputDescription\"\r\n                placeholder=\"Enter description of Recipe\"\r\n              ></textarea>\r\n            </div>\r\n            <UploadManualStep\r\n              item={this.state.ingredientCount}\r\n              handleAdd={this.handleAdd(\"ingredientCount\")}\r\n              handleRemove={this.handleRemove(\r\n                \"ingredientCount\",\r\n                this.state.ingredientCount\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default uploadManual;\r\n"]},"metadata":{},"sourceType":"module"}