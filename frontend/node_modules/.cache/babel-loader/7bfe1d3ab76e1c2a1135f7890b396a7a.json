{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zubin\\\\Receiply\\\\frontend\\\\src\\\\privateroute.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport axios from \"axios\";\n/*\r\nclass PrivateRoute extends Component {\r\n  state = {\r\n    authorized: \"\",\r\n    component: this.props.component,\r\n    route: this.props.route,\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/api/authorize\")\r\n      .then((result) => this.setState({ authorized: result.data }))\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.authorized === false) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return <Route path={this.state.route} component={this.state.component} />;\r\n  }\r\n}\r\n\r\nexport default PrivateRoute;\r\n*/\n\nconst check = checkAuth = () => {\n  let isAuth = axios.get(\"/api/authorize\");\n  return isAuth.data;\n};\n\nconst PrivateRoute = ({\n  component: Component,\n  handleChildFunc,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => check !== false ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      user: user,\n      handleChildFunc: handleChildFunc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/zubin/Receiply/frontend/src/privateroute.jsx"],"names":["React","Component","Redirect","Route","axios","check","checkAuth","isAuth","get","data","PrivateRoute","component","handleChildFunc","rest","props","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAMC,KAAK,GAAIC,SAAS,GAAG,MAAM;AAC/B,MAAIC,MAAM,GAAGH,KAAK,CAACI,GAAN,CAAU,gBAAV,CAAb;AACA,SAAOD,MAAM,CAACE,IAAd;AACD,CAHD;;AAKA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEV,SAAb;AAAwBW,EAAAA,eAAxB;AAAyC,KAAGC;AAA5C,CAAD,KAAwD;AAC3E,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IACNT,KAAK,KAAK,KAAV,gBACE,oBAAC,SAAD,oBAAeS,KAAf;AAAsB,MAAA,IAAI,EAAEC,IAA5B;AAAkC,MAAA,eAAe,EAAEH,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,gBAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAbD;;AAeA,eAAeF,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\n/*\r\nclass PrivateRoute extends Component {\r\n  state = {\r\n    authorized: \"\",\r\n    component: this.props.component,\r\n    route: this.props.route,\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/api/authorize\")\r\n      .then((result) => this.setState({ authorized: result.data }))\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.authorized === false) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return <Route path={this.state.route} component={this.state.component} />;\r\n  }\r\n}\r\n\r\nexport default PrivateRoute;\r\n*/\r\nconst check = (checkAuth = () => {\r\n  let isAuth = axios.get(\"/api/authorize\");\r\n  return isAuth.data;\r\n});\r\n\r\nconst PrivateRoute = ({ component: Component, handleChildFunc, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        check !== false ? (\r\n          <Component {...props} user={user} handleChildFunc={handleChildFunc} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}