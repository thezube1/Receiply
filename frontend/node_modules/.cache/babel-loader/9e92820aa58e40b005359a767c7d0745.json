{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zubin\\\\Receiply\\\\frontend\\\\src\\\\privateroute.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport axios from \"axios\";\n\nclass PrivateRoute extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      authorized: \"\",\n      component: this.props.component,\n      route: this.props.route\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/authorize\").then(result => this.setState({\n      authorized: result.data\n    })).catch(error => {\n      console.log(error.response);\n    });\n  }\n\n  render() {\n    /*\r\n    if (this.state.authorized === false) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    */\n    return /*#__PURE__*/React.createElement(Route, {\n      path: this.state.route,\n      render: () => !this.state.authorized ? this.state.component : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/zubin/Receiply/frontend/src/privateroute.jsx"],"names":["React","Component","Redirect","Route","axios","PrivateRoute","state","authorized","component","props","route","componentDidMount","get","then","result","setState","data","catch","error","console","log","response","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCK,KADmC,GAC3B;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAFhB;AAGNE,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAHZ,KAD2B;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,KAAK,CACFQ,GADH,CACO,gBADP,EAEGC,IAFH,CAESC,MAAD,IAAY,KAAKC,QAAL,CAAc;AAAER,MAAAA,UAAU,EAAEO,MAAM,CAACE;AAArB,KAAd,CAFpB,EAGGC,KAHH,CAGUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACD,KALH;AAMD;;AACDC,EAAAA,MAAM,GAAG;AACP;;;;;AAKA,wBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWI,KADnB;AAEE,MAAA,MAAM,EAAE,MACN,CAAC,KAAKJ,KAAL,CAAWC,UAAZ,GACE,KAAKD,KAAL,CAAWE,SADb,gBAGE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD;;AAhCkC;;AAmCrC,eAAeH,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\nclass PrivateRoute extends Component {\r\n  state = {\r\n    authorized: \"\",\r\n    component: this.props.component,\r\n    route: this.props.route,\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/api/authorize\")\r\n      .then((result) => this.setState({ authorized: result.data }))\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    /*\r\n    if (this.state.authorized === false) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    */\r\n    return (\r\n      <Route\r\n        path={this.state.route}\r\n        render={() =>\r\n          !this.state.authorized ? (\r\n            this.state.component\r\n          ) : (\r\n            <Redirect to=\"/login\" />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}