{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zubin\\\\Receiply\\\\frontend\\\\src\\\\privateroute2.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nasync function getAuth() {\n  const data = await axios.get(\"/api/authorize\");\n  return data;\n}\n\nconsole.log(getAuth());\n\nconst PrivateRoute2 = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    React.createElement(Route, Object.assign({}, rest, {\n      render: props => data ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 43\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }))\n  );\n};\n\nexport default PrivateRoute2;\n/*import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst PrivateRoute2 = ({ component: Component, authed, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      authed ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\nexport default PrivateRoute2;\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/zubin/Receiply/frontend/src/privateroute2.jsx"],"names":["React","Route","Redirect","axios","getAuth","data","get","console","log","PrivateRoute2","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,OAAf,GAAyB;AACvB,QAAMC,IAAI,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,gBAAV,CAAnB;AACA,SAAOD,IAAP;AACD;;AAEDE,OAAO,CAACC,GAAR,CAAYJ,OAAO,EAAnB;;AAEA,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC3D;AAAA;AACE;AACA;AACA,wBAAC,KAAD,oBACMA,IADN;AAEE,MAAA,MAAM,EAAGC,KAAD,IACNR,IAAI,gBAAG,oBAAC,SAAD,oBAAeQ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,gBAA8B,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAUD,CAXD;;AAaA,eAAeJ,aAAf;AACA","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nasync function getAuth() {\r\n  const data = await axios.get(\"/api/authorize\");\r\n  return data;\r\n}\r\n\r\nconsole.log(getAuth());\r\n\r\nconst PrivateRoute2 = ({ component: Component, ...rest }) => {\r\n  return (\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        data ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute2;\r\n/*import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst PrivateRoute2 = ({ component: Component, authed, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      authed ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\nexport default PrivateRoute2;\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}