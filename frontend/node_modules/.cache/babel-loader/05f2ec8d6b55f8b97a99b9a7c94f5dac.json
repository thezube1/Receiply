{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zubin\\\\Receiply\\\\frontend\\\\src\\\\components\\\\upload\\\\uploadManual\\\\uploadManual.jsx\";\nimport React, { Component } from \"react\";\nimport \"./uploadManual.css\";\nimport NavbarMain from \"../../navbar/navbarmain\";\n\nclass uploadManual extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredientCount: [\"\", \"\", \"\"]\n    };\n\n    this.handleRefresh = name => {\n      this.setState([name]);\n    };\n\n    this.handleRemove = (name, type, index) => {\n      const array = type;\n      array.splice(index, 1);\n      this.setState({\n        [name]: array\n      }); //this.setState({ [name]: type.splice(index, index) });\n    };\n\n    this.handleAdd = (name, type) => {\n      type.push(\"\");\n      this.setState({\n        [name]: type\n      }); //this.setState({ [name]: type.push(\"\") });\n    };\n\n    this.handleArrayChange = (inputType, index) => event => {\n      let newItem = event.target.value;\n      const newArray = this.state[inputType];\n      newArray[index] = newItem;\n      this.setState({\n        [inputType]: newArray\n      });\n    };\n\n    this.includeAdd = (name, type, index) => {\n      if (type.length === index + 1) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"uploadManualAdd\",\n          onClick: () => this.handleAdd(name, type),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"uploadManualAddInner1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"uploadManualAddInner2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.backgroundColor = \"rgb(136, 228, 138)\";\n  }\n\n  componentWillUnmount() {\n    document.body.style.backgroundColor = \"white\";\n  }\n\n  render() {\n    console.log(this.state.ingredientCount);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavbarMain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"uploadManualTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Upload Recipe\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \"Upload Photo:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"uploadManualButton\",\n      type: \"button\",\n      value: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Name of Recipe:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"uploadManualInput\",\n      placeholder: \"Enter name of Recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"uploadManualRequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"*\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Description:\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"uploadManualInput\",\n      id: \"uploadManualInputDescription\",\n      placeholder: \"Enter description of Recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadManualInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Ingredients:\")), this.state.ingredientCount.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"uploadManualInputWrapper2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"uploadManualInput\",\n        id: \"uploadManualInputIngredient\",\n        placeholder: \"Enter ingredient\",\n        defaultValue: this.state.ingredientCount[index],\n        onChange: this.handleArrayChange(\"ingredientCount\", index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"uploadManualRemove\",\n        onClick: (() => this.handleRemove(\"ingredientCount\", this.state.ingredientCount, index), this.handleRemove(\"ingredientCount\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"uploadManualRemoveInner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }\n      })), this.includeAdd(\"ingredientCount\", this.state.ingredientCount, index));\n    })))));\n  }\n\n}\n\nexport default uploadManual;","map":{"version":3,"sources":["C:/Users/zubin/Receiply/frontend/src/components/upload/uploadManual/uploadManual.jsx"],"names":["React","Component","NavbarMain","uploadManual","state","ingredientCount","handleRefresh","name","setState","handleRemove","type","index","array","splice","handleAdd","push","handleArrayChange","inputType","event","newItem","target","value","newArray","includeAdd","length","componentDidMount","document","body","style","backgroundColor","componentWillUnmount","render","console","log","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./uploadManual.css\";\r\nimport NavbarMain from \"../../navbar/navbarmain\";\r\n\r\nclass uploadManual extends Component {\r\n  state = {\r\n    ingredientCount: [\"\", \"\", \"\"],\r\n  };\r\n\r\n  handleRefresh = (name) => {\r\n    this.setState([name]);\r\n  };\r\n\r\n  handleRemove = (name, type, index) => {\r\n    const array = type;\r\n    array.splice(index, 1);\r\n    this.setState({ [name]: array });\r\n    //this.setState({ [name]: type.splice(index, index) });\r\n  };\r\n\r\n  handleAdd = (name, type) => {\r\n    type.push(\"\");\r\n    this.setState({ [name]: type });\r\n    //this.setState({ [name]: type.push(\"\") });\r\n  };\r\n\r\n  handleArrayChange = (inputType, index) => (event) => {\r\n    let newItem = event.target.value;\r\n    const newArray = this.state[inputType];\r\n    newArray[index] = newItem;\r\n    this.setState({\r\n      [inputType]: newArray,\r\n    });\r\n  };\r\n\r\n  includeAdd = (name, type, index) => {\r\n    if (type.length === index + 1) {\r\n      return (\r\n        <button\r\n          className=\"uploadManualAdd\"\r\n          onClick={() => this.handleAdd(name, type)}\r\n        >\r\n          <div className=\"uploadManualAddInner1\"></div>\r\n          <div className=\"uploadManualAddInner2\"></div>\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = \"rgb(136, 228, 138)\";\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.style.backgroundColor = \"white\";\r\n  }\r\n  render() {\r\n    console.log(this.state.ingredientCount);\r\n    return (\r\n      <React.Fragment>\r\n        <NavbarMain />\r\n        <div id=\"uploadManualWrapper\">\r\n          <div id=\"uploadManualContent\">\r\n            <div id=\"uploadManualTitle\">Upload Recipe</div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>Upload Photo:</div>\r\n              <input\r\n                className=\"uploadManualButton\"\r\n                type=\"button\"\r\n                value=\"select\"\r\n              />\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span className=\"uploadManualRequired\">*</span>\r\n                <span>Name of Recipe:</span>\r\n              </div>\r\n              <textarea\r\n                className=\"uploadManualInput\"\r\n                placeholder=\"Enter name of Recipe\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span className=\"uploadManualRequired\">*</span>\r\n                <span>Description:</span>\r\n              </div>\r\n              <textarea\r\n                className=\"uploadManualInput\"\r\n                id=\"uploadManualInputDescription\"\r\n                placeholder=\"Enter description of Recipe\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"uploadManualInputWrapper\">\r\n              <div>\r\n                <span>Ingredients:</span>\r\n              </div>\r\n              {this.state.ingredientCount.map((item, index) => {\r\n                return (\r\n                  <div key={index} className=\"uploadManualInputWrapper2\">\r\n                    <textarea\r\n                      className=\"uploadManualInput\"\r\n                      id=\"uploadManualInputIngredient\"\r\n                      placeholder=\"Enter ingredient\"\r\n                      defaultValue={this.state.ingredientCount[index]}\r\n                      onChange={this.handleArrayChange(\r\n                        \"ingredientCount\",\r\n                        index\r\n                      )}\r\n                    ></textarea>\r\n                    <button\r\n                      className=\"uploadManualRemove\"\r\n                      onClick={\r\n                        (() =>\r\n                          this.handleRemove(\r\n                            \"ingredientCount\",\r\n                            this.state.ingredientCount,\r\n                            index\r\n                          ),\r\n                        this.handleRemove(\"ingredientCount\"))\r\n                      }\r\n                    >\r\n                      <div className=\"uploadManualRemoveInner\"></div>\r\n                    </button>\r\n                    {this.includeAdd(\r\n                      \"ingredientCount\",\r\n                      this.state.ingredientCount,\r\n                      index\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default uploadManual;\r\n"]},"metadata":{},"sourceType":"module"}